<Type Name="MultipleOperandBooleanExpressionType" FullName="ExchangeWebServices.MultipleOperandBooleanExpressionType">
  <TypeSignature Language="C#" Value="public abstract class MultipleOperandBooleanExpressionType : ExchangeWebServices.SearchExpressionType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit MultipleOperandBooleanExpressionType extends ExchangeWebServices.SearchExpressionType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.MultipleOperandBooleanExpressionType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MultipleOperandBooleanExpressionType&#xA;Inherits SearchExpressionType" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultipleOperandBooleanExpressionType abstract : ExchangeWebServices::SearchExpressionType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.SearchExpressionType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlInclude(typeof(ExchangeWebServices.AndType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlInclude(typeof(ExchangeWebServices.OrType))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The <see cref="T:ExchangeWebServices.MultipleOperandBooleanExpressionType" /> class is the base class for derived classes that represent a restriction formed by two or more Boolean operands.</summary>
    <remarks>
      <para>The <see cref="T:ExchangeWebServices.MultipleOperandBooleanExpressionType" /> class is the base class for the <see cref="T:ExchangeWebServices.AndType" /> and <see cref="T:ExchangeWebServices.OrType" /> classes.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MultipleOperandBooleanExpressionType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.MultipleOperandBooleanExpressionType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MultipleOperandBooleanExpressionType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>The <see cref="T:ExchangeWebServices.MultipleOperandBooleanExpressionType" /> class is abstract and cannot be instantiated.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.SearchExpressionType[] Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.SearchExpressionType[] Items" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.MultipleOperandBooleanExpressionType.Items" />
      <MemberSignature Language="VB.NET" Value="Public Property Items As SearchExpressionType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::SearchExpressionType ^&gt; ^ Items { cli::array &lt;ExchangeWebServices::SearchExpressionType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::SearchExpressionType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("Or", typeof(ExchangeWebServices.OrType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("Excludes", typeof(ExchangeWebServices.ExcludesType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("And", typeof(ExchangeWebServices.AndType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("SearchExpression", typeof(ExchangeWebServices.SearchExpressionType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IsGreaterThanOrEqualTo", typeof(ExchangeWebServices.IsGreaterThanOrEqualToType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("Not", typeof(ExchangeWebServices.NotType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IsEqualTo", typeof(ExchangeWebServices.IsEqualToType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IsGreaterThan", typeof(ExchangeWebServices.IsGreaterThanType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("Exists", typeof(ExchangeWebServices.ExistsType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("Contains", typeof(ExchangeWebServices.ContainsExpressionType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IsLessThan", typeof(ExchangeWebServices.IsLessThanType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IsLessThanOrEqualTo", typeof(ExchangeWebServices.IsLessThanOrEqualToType))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("IsNotEqualTo", typeof(ExchangeWebServices.IsNotEqualToType))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.SearchExpressionType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="P:ExchangeWebServices.MultipleOperandBooleanExpressionType.Items" /> property gets or sets an array of search expressions that represents a set of operands.</summary>
        <value>The <see cref="P:ExchangeWebServices.MultipleOperandBooleanExpressionType.Items" /> property returns an array of <see cref="T:ExchangeWebServices.SearchExpressionType" /> objects that represent either an <see cref="T:ExchangeWebServices.AndType" /> or an <see cref="T:ExchangeWebServices.OrType" /> search expression.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>